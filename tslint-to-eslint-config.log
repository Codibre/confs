6 ESLint rules behave differently from their TSLint counterparts:
  * camelcase:
    - Leading undescores in variable names will now be ignored.
  * no-underscore-dangle:
    - Leading and trailing underscores (_) on identifiers will now be ignored.
  * @typescript-eslint/no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * eqeqeq:
    - Option "smart" allows for comparing two literal values, evaluating the value of typeof and null comparisons.
  * no-invalid-this:
    - Functions in methods will no longer be ignored.
  * one-var:
    - Variables declared in for loops will no longer be checked.

30 rules are not known by tslint-to-eslint-config to have ESLint equivalents:
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "array-bracket-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ban".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "block-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "brace-style".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-duplicate-case".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-empty-character-class".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-ex-assign".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-extra-boolean-cast".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-extra-semi".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-inner-declarations".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-multi-spaces".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unexpected-multiline".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unnecessary-else".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "no-unused-expression-chai".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "object-curly-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "space-in-parens".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-arrow-body-style".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-arrow-parens".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-arrow-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-func-call-spacing".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-max-len".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-irregular-whitespace".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-proto".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-script-url".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-self-compare".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-sparse-arrays".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-no-tabs".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-padded-blocks".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "ter-prefer-arrow-callback".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "valid-typeof".

